[project]
authors = [{name = "Paul Gierz", email = "pgierz@awi.de"}]
dependencies = [
    "pycrdt>=0.12.26,<0.13",
    "rich-click>=1.8.9,<2",
    "dpath>=2.2.0,<3", "asyncio>=3.4.3,<4",
]
name = "animavox"
description = "A tool for managing and versioning data structures with CRDTs"
requires-python = ">=3.11"
version = "0.1.0"

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-xdist>=3.3.1",
]
dev = [
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.0.284",
]

[project.scripts]
animavox = "animavox.cli:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build]
packages = ["src/animavox"]

# Pixi configuration
[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

# Pixi configuration
[tool.pixi.dependencies]
# Runtime dependencies
pycrdt = ">=0.12.26,<0.13"
"rich-click" = ">=1.8.9,<2"
dpath = ">=2.2.0,<3"

# Development and test dependencies (included in all environments)
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.11.1"
pytest-xdist = ">=3.3.1"
black = ">=23.7.0"
isort = ">=5.12.0"
mypy = ">=1.5.0"
ruff = ">=0.0.284"
fsspec = ">=2025.7.0,<2026"
aiohttp = ">=3.12.14,<4"
loguru = ">=0.7.3,<0.8"

# Install the package in development mode
[tool.pixi.pypi-dependencies]
animavox = { path = ".", editable = true }
tellus = { path = "../tellus", editable = true }

[tool.pixi.tasks]
animavox = "python -m animavox.cli"
test = "pytest tests/ -v"
test-cov = "pytest tests/ --cov=src --cov-report=term-missing"
lint = "ruff check src/ tests/"
format = "black src/ tests/"
typecheck = "mypy src/"

# Test configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
pythonpath = ["src"]
addopts = "-v --cov=src --cov-report=term-missing"
norecursedirs = [".git", "build", "dist", "*.egg-info"]

# Formatting and linting
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.isort]
known-first-party = ["animavox"]

# Type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
