name: CI
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:
jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.0
        with:
          pixi-version: v0.28.2
          cache: true
      - name: Install dependencies
        run: pixi install
      - name: Run tests with coverage (excluding problematic integration tests)
        run: pixi run test-cov-ci
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.28.2
          cache: true
      - name: Install dependencies
        run: pixi install
      - name: Check formatting with black
        run: pixi run format-check
      - name: Check imports with isort
        run: pixi run isort-check
      - name: Lint with ruff
        run: pixi run lint
      - name: Type check with mypy
        run: pixi run typecheck
        continue-on-error: true # Don't fail CI on mypy errors initially
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.28.2
          cache: true
      - name: Install dependencies
        run: pixi install
      - name: Run safety check
        run: |
          pixi run pip install safety
          pixi run safety check --json
        continue-on-error: true # Don't fail CI on security warnings initially
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.28.2
          cache: true
      - name: Install dependencies
        run: pixi install
      - name: Build package
        run: pixi run build
      - name: Check package
        run: pixi run check-package
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
